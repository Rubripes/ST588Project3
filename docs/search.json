[
  {
    "objectID": "EDA.html",
    "href": "EDA.html",
    "title": "EDA",
    "section": "",
    "text": "Data were sourced from Kaggle.\n\n\nThe prevalence of Diabetes has increased from 200 million to 830 million cases worldwide from 1990 to 2022. In 2021 diabetes and diabetes related complications were implicated in over 2 million deaths. WHO\nThe Behavioral Risk Factor Surveillance System (BRFSS) is a survey that is conducted annually by the CDC and responses are collected from over 400,000 Americans. This survery has been conducted yearly since 1984. The dataset to be analyzed for this project (“diabetes_binary_health_indicators_BRFSS2015.csv”) contains 253,680 responses to the survey. There are three dependent variable levels, 0=no diabetes or only during pregnancy, 1=prediabetes, and 2= diabetes. There are two factor levels for the dependent variable; 0=no diabetes and 1=diabetes. There is class imbalance in the dataset and there are 21 feature variables. Diabetes Health Indicators Dataset\nMost of the variables appear to be factor type variables (e.g., numbers are used to encode a class), and they will be explored and reformatted during the EDA below. In order to simplify the model fitting, I plan to explore “actionable” variables, or variables that the respondents can generally exert active control over in their lives (e.g.: Vegetable Consumption, Fruit Consumption, Smoking, Heavy Drinking, and Physical Activity), plus two intrinsic variables (Age and Sex). Each of these feature variables is a binary variable (Yes/No, Male/Female), except age is a factor type variable with 13 levels and will need to be coerced to factor and renamed. The dependent variable (Diabetes_binary) is also a binary variable that takes on “Yes” or “No”. A response of “Yes” means that the respondent has diabetes and a response of “No” means that the respondent does not have diabetes.\nThe purpose of this EDA is to understand the structure of the entire dataset, reformat the raw data as appropriate for downstream model fitting, and to see if there are any theories that we can formulate just bey visualizing simple charts. The data will eventually be evaluate two models (classification tree and random forest) by using 5-fold cross validation. The overall goal of this will be to select the better model for predicting whether or not a respondent is at risk of diabetes using the Diabetes_binary variable.\n\n\n\nThe data were downloaded from the source and saved locally on my hard drive. They will be imported below, evaluated, and formatted for the downstream uses of visualization and modelling.\nThe first step is to load libraries necessary for data exploration:\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.2.3\n\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nWarning: package 'tibble' was built under R version 4.2.3\n\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\n\nWarning: package 'readr' was built under R version 4.2.3\n\n\nWarning: package 'purrr' was built under R version 4.2.3\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\nWarning: package 'stringr' was built under R version 4.2.2\n\n\nWarning: package 'forcats' was built under R version 4.2.3\n\n\nWarning: package 'lubridate' was built under R version 4.2.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nHere we’ll read in the data using the readr::read_csv command\n\n#read csv file\ndata &lt;- read_csv(\"../diabetes_binary_health_indicators_BRFSS2015.csv\")\n\nRows: 253680 Columns: 22\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (22): Diabetes_binary, HighBP, HighChol, CholCheck, BMI, Smoker, Stroke,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nIs there any missing data?\n\n#sum total number of rows where data is missing\ncolSums(is.na(data))\n\n     Diabetes_binary               HighBP             HighChol \n                   0                    0                    0 \n           CholCheck                  BMI               Smoker \n                   0                    0                    0 \n              Stroke HeartDiseaseorAttack         PhysActivity \n                   0                    0                    0 \n              Fruits              Veggies    HvyAlcoholConsump \n                   0                    0                    0 \n       AnyHealthcare          NoDocbcCost              GenHlth \n                   0                    0                    0 \n            MentHlth             PhysHlth             DiffWalk \n                   0                    0                    0 \n                 Sex                  Age            Education \n                   0                    0                    0 \n              Income \n                   0 \n\n\nNo missing data! This matches the description of the data on the source webpage.\nNow that the data are in the R global environment, it will be useful to understand the variables and the data types they were assigned upon import and this will help us to think about how best to reformat the data for future steps. We’ll use a few commands to do this: str() will give us the overall structure and can help to visualize the number of values for categorical variables and head() will help us to see the first 6 rows of the data to further understand information provided by str().\n\n#use str() to check out variable data types and values.\nstr(data)\n\nspc_tbl_ [253,680 × 22] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Diabetes_binary     : num [1:253680] 0 0 0 0 0 0 0 0 1 0 ...\n $ HighBP              : num [1:253680] 1 0 1 1 1 1 1 1 1 0 ...\n $ HighChol            : num [1:253680] 1 0 1 0 1 1 0 1 1 0 ...\n $ CholCheck           : num [1:253680] 1 0 1 1 1 1 1 1 1 1 ...\n $ BMI                 : num [1:253680] 40 25 28 27 24 25 30 25 30 24 ...\n $ Smoker              : num [1:253680] 1 1 0 0 0 1 1 1 1 0 ...\n $ Stroke              : num [1:253680] 0 0 0 0 0 0 0 0 0 0 ...\n $ HeartDiseaseorAttack: num [1:253680] 0 0 0 0 0 0 0 0 1 0 ...\n $ PhysActivity        : num [1:253680] 0 1 0 1 1 1 0 1 0 0 ...\n $ Fruits              : num [1:253680] 0 0 1 1 1 1 0 0 1 0 ...\n $ Veggies             : num [1:253680] 1 0 0 1 1 1 0 1 1 1 ...\n $ HvyAlcoholConsump   : num [1:253680] 0 0 0 0 0 0 0 0 0 0 ...\n $ AnyHealthcare       : num [1:253680] 1 0 1 1 1 1 1 1 1 1 ...\n $ NoDocbcCost         : num [1:253680] 0 1 1 0 0 0 0 0 0 0 ...\n $ GenHlth             : num [1:253680] 5 3 5 2 2 2 3 3 5 2 ...\n $ MentHlth            : num [1:253680] 18 0 30 0 3 0 0 0 30 0 ...\n $ PhysHlth            : num [1:253680] 15 0 30 0 0 2 14 0 30 0 ...\n $ DiffWalk            : num [1:253680] 1 0 1 0 0 0 0 1 1 0 ...\n $ Sex                 : num [1:253680] 0 0 0 0 0 1 0 0 0 1 ...\n $ Age                 : num [1:253680] 9 7 9 11 11 10 9 11 9 8 ...\n $ Education           : num [1:253680] 4 6 4 3 5 6 6 4 5 4 ...\n $ Income              : num [1:253680] 3 1 8 6 4 8 7 4 1 3 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Diabetes_binary = col_double(),\n  ..   HighBP = col_double(),\n  ..   HighChol = col_double(),\n  ..   CholCheck = col_double(),\n  ..   BMI = col_double(),\n  ..   Smoker = col_double(),\n  ..   Stroke = col_double(),\n  ..   HeartDiseaseorAttack = col_double(),\n  ..   PhysActivity = col_double(),\n  ..   Fruits = col_double(),\n  ..   Veggies = col_double(),\n  ..   HvyAlcoholConsump = col_double(),\n  ..   AnyHealthcare = col_double(),\n  ..   NoDocbcCost = col_double(),\n  ..   GenHlth = col_double(),\n  ..   MentHlth = col_double(),\n  ..   PhysHlth = col_double(),\n  ..   DiffWalk = col_double(),\n  ..   Sex = col_double(),\n  ..   Age = col_double(),\n  ..   Education = col_double(),\n  ..   Income = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\nAll of the variables are numeric. Let’s see what the actual data look like.\n\nhead(data)\n\n# A tibble: 6 × 22\n  Diabetes_binary HighBP HighChol CholCheck   BMI Smoker Stroke\n            &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1               0      1        1         1    40      1      0\n2               0      0        0         0    25      1      0\n3               0      1        1         1    28      0      0\n4               0      1        0         1    27      0      0\n5               0      1        1         1    24      0      0\n6               0      1        1         1    25      1      0\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;dbl&gt;, PhysActivity &lt;dbl&gt;,\n#   Fruits &lt;dbl&gt;, Veggies &lt;dbl&gt;, HvyAlcoholConsump &lt;dbl&gt;, AnyHealthcare &lt;dbl&gt;,\n#   NoDocbcCost &lt;dbl&gt;, GenHlth &lt;dbl&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;dbl&gt;, Sex &lt;dbl&gt;, Age &lt;dbl&gt;, Education &lt;dbl&gt;, Income &lt;dbl&gt;\n\n\nWe know from the description of the dataset that Diabetes_binary is is a factor type variable, with 0, 1, and 2 representing different diabetes “diagnoses”. We’ll use the descriptions provided with the data to format the dataset.\nI’d like to understand what values are available for the factor type variables in this dataset so that I can set values appropriate, or verify that they were set by R appropriately. The description of the Diabetes_binary variable appears to have three levels, but the chart immediately under it shows a binary response. Diabetes_binary.\n\n#create count table of levels\ntable(data$Diabetes_binary)\n\n\n     0      1 \n218334  35346 \n\n\nOk, the description on the webpage appears to be mis-specified. This does appear to be a binary response with two levels (0,1)\nLet’s change the factor type variables to factors in the dataset. We’ll create a list of the variables that we want to change to factors, then we’ll change the names of all the variables, then we’ll apply the factor list through the factor() function to selectively change the variables to . We’ll also change a few variables to integers at the same time using the same logic and the as.interger function.\n\n#create list of variables to change to factor\nfactors&lt;-c(\"diabetesBin\", \"highBP\", \"highChol\", \"cholCheck\", \"smoker\", \"stroke\", \"heartProb\", \"physAct\", \"fruits\", \"veg\", \"etOH\", \"hlthCare\", \"noDoc\", \"genHlth\", \"diffWalk\", \"sex\", \"age\", \"edu\", \"income\")\n#create list of variables to change to integers\nintegers&lt;-c(\"bmi\", \"mentHlth\", \"physHlth\")\n#use rename() to rename all variables for consistency and mutate() to change each list to appropriate data type\ndata1 &lt;- data |&gt;\n  rename(\"diabetesBin\" = \"Diabetes_binary\",\n         \"highBP\" = \"HighBP\",\n         \"highChol\" = \"HighChol\",\n         \"cholCheck\" = \"CholCheck\",\n         \"bmi\" = \"BMI\",\n         \"smoker\" = \"Smoker\",\n         \"stroke\" = \"Stroke\",\n         \"heartProb\" = \"HeartDiseaseorAttack\",\n         \"physAct\" = \"PhysActivity\",\n         \"fruits\" = \"Fruits\",\n         \"veg\" = \"Veggies\",\n         \"etOH\" = \"HvyAlcoholConsump\",\n         \"hlthCare\" =\"AnyHealthcare\",\n         \"noDoc\" = \"NoDocbcCost\",\n         \"genHlth\" = \"GenHlth\",\n         \"mentHlth\" = \"MentHlth\",\n         \"physHlth\" = \"PhysHlth\",\n         \"diffWalk\" = \"DiffWalk\",\n         \"sex\" = \"Sex\",\n         \"age\" = \"Age\",\n         \"edu\" = \"Education\",\n         \"income\" = \"Income\"\n         ) |&gt;\n  mutate_at(factors, factor) |&gt;\n  mutate_at(integers, as.integer)\n\nWe’ll still should redefine some of the factors to have a value that helps us understand the dataset, but let’s check everything out first to make sure it makes sense.\n\nstr(data1)\n\ntibble [253,680 × 22] (S3: tbl_df/tbl/data.frame)\n $ diabetesBin: Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 2 1 ...\n $ highBP     : Factor w/ 2 levels \"0\",\"1\": 2 1 2 2 2 2 2 2 2 1 ...\n $ highChol   : Factor w/ 2 levels \"0\",\"1\": 2 1 2 1 2 2 1 2 2 1 ...\n $ cholCheck  : Factor w/ 2 levels \"0\",\"1\": 2 1 2 2 2 2 2 2 2 2 ...\n $ bmi        : int [1:253680] 40 25 28 27 24 25 30 25 30 24 ...\n $ smoker     : Factor w/ 2 levels \"0\",\"1\": 2 2 1 1 1 2 2 2 2 1 ...\n $ stroke     : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n $ heartProb  : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 2 1 ...\n $ physAct    : Factor w/ 2 levels \"0\",\"1\": 1 2 1 2 2 2 1 2 1 1 ...\n $ fruits     : Factor w/ 2 levels \"0\",\"1\": 1 1 2 2 2 2 1 1 2 1 ...\n $ veg        : Factor w/ 2 levels \"0\",\"1\": 2 1 1 2 2 2 1 2 2 2 ...\n $ etOH       : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n $ hlthCare   : Factor w/ 2 levels \"0\",\"1\": 2 1 2 2 2 2 2 2 2 2 ...\n $ noDoc      : Factor w/ 2 levels \"0\",\"1\": 1 2 2 1 1 1 1 1 1 1 ...\n $ genHlth    : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 5 3 5 2 2 2 3 3 5 2 ...\n $ mentHlth   : int [1:253680] 18 0 30 0 3 0 0 0 30 0 ...\n $ physHlth   : int [1:253680] 15 0 30 0 0 2 14 0 30 0 ...\n $ diffWalk   : Factor w/ 2 levels \"0\",\"1\": 2 1 2 1 1 1 1 2 2 1 ...\n $ sex        : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 2 1 1 1 2 ...\n $ age        : Factor w/ 13 levels \"1\",\"2\",\"3\",\"4\",..: 9 7 9 11 11 10 9 11 9 8 ...\n $ edu        : Factor w/ 6 levels \"1\",\"2\",\"3\",\"4\",..: 4 6 4 3 5 6 6 4 5 4 ...\n $ income     : Factor w/ 8 levels \"1\",\"2\",\"3\",\"4\",..: 3 1 8 6 4 8 7 4 1 3 ...\n\n\nOk, everything is making sense! Now we need to give some useful levels to the factors. We’ll use fct_recode for this purpose. We will rely on the dataset description to assign numeric levels to character levels that help us understand the data a little more clearly.\n\n#create list of yes/no factors to be coded where 0=no, 1=yes\nyesNo &lt;- c(\"diabetesBin\", \"highBP\", \"highChol\", \"cholCheck\", \"smoker\", \"stroke\", \"heartProb\", \"physAct\", \"fruits\", \"veg\", \"etOH\", \"hlthCare\", \"noDoc\", \"diffWalk\")\n#mutate_at the list yesNo and equate 0 to no and 1 to yes.\ndata2 &lt;- data1 |&gt; \n  mutate_at(.vars = yesNo,\n            .funs = fct_recode,\n            \"Yes\" = \"1\",\n            \"No\" = \"0\")\n\nLet’s check quickly to see if that worked as expected…\n\nstr(data2)\n\ntibble [253,680 × 22] (S3: tbl_df/tbl/data.frame)\n $ diabetesBin: Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 2 1 ...\n $ highBP     : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 2 2 2 2 2 2 1 ...\n $ highChol   : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 1 2 2 1 2 2 1 ...\n $ cholCheck  : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 2 2 2 2 2 2 2 ...\n $ bmi        : int [1:253680] 40 25 28 27 24 25 30 25 30 24 ...\n $ smoker     : Factor w/ 2 levels \"No\",\"Yes\": 2 2 1 1 1 2 2 2 2 1 ...\n $ stroke     : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n $ heartProb  : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 2 1 ...\n $ physAct    : Factor w/ 2 levels \"No\",\"Yes\": 1 2 1 2 2 2 1 2 1 1 ...\n $ fruits     : Factor w/ 2 levels \"No\",\"Yes\": 1 1 2 2 2 2 1 1 2 1 ...\n $ veg        : Factor w/ 2 levels \"No\",\"Yes\": 2 1 1 2 2 2 1 2 2 2 ...\n $ etOH       : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n $ hlthCare   : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 2 2 2 2 2 2 2 ...\n $ noDoc      : Factor w/ 2 levels \"No\",\"Yes\": 1 2 2 1 1 1 1 1 1 1 ...\n $ genHlth    : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 5 3 5 2 2 2 3 3 5 2 ...\n $ mentHlth   : int [1:253680] 18 0 30 0 3 0 0 0 30 0 ...\n $ physHlth   : int [1:253680] 15 0 30 0 0 2 14 0 30 0 ...\n $ diffWalk   : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 1 1 1 1 2 2 1 ...\n $ sex        : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 2 1 1 1 2 ...\n $ age        : Factor w/ 13 levels \"1\",\"2\",\"3\",\"4\",..: 9 7 9 11 11 10 9 11 9 8 ...\n $ edu        : Factor w/ 6 levels \"1\",\"2\",\"3\",\"4\",..: 4 6 4 3 5 6 6 4 5 4 ...\n $ income     : Factor w/ 8 levels \"1\",\"2\",\"3\",\"4\",..: 3 1 8 6 4 8 7 4 1 3 ...\n\n\nThat appears as if we now have a Yes/No for each binary variable from our yesNo list above. Now, let’s use fct_recode on the factors that are not binary and need a little more attention.\n\ndata3 &lt;- data2 |&gt;\n  #define levels for genHlth\n  mutate(genHlth = fct_recode(genHlth,\n    \"Excellent\" = \"1\",\n    \"Very Good\" = \"2\",\n    \"Good\" = \"3\",\n    \"Fair\" = \"4\",\n    \"Poor\" = \"5\"),\n  #define levels for age\n         age = fct_recode(age,\n    \"18 to 24\" = \"1\",\n    \"25 to 30\" = \"2\",\n    \"30 to 34\" = \"3\",\n    \"35 to 39\" = \"4\",\n    \"40 to 44\" = \"5\",\n    \"45 to 49\" = \"6\",\n    \"50 to 54\" = \"7\",\n    \"55 to 59\" = \"8\",\n    \"60 to 64\" = \"9\",\n    \"65 to 69\" = \"10\",\n    \"70 to 74\" = \"11\",\n    \"75 to 79\" = \"12\",\n    \"80 and Older\" = \"13\"),\n  #define levels for edu\n         edu = fct_recode(edu,\n    \"No School/Only Kindergarten\" = \"1\",\n    \"Grades 1-8\" = \"2\",\n    \"Grades 9-11\" = \"3\",\n    \"Grade 12/GED\" = \"4\",\n    \"College Years 1-3\" = \"5\",\n    \"College Years &gt;=4\" = \"6\"),\n  #define levels for income\n         income =fct_recode(income,\n    \"Less than $10K\" = \"1\",\n    \"$10K to less than $15K\" = \"2\",\n    \"$15K to less than $20K\" = \"3\",\n    \"$20K to less than $25K\" = \"4\",\n    \"$25K to less than $35K\" = \"5\",\n    \"$35K to less than $50K\" = \"6\",\n    \"$50K to less than $75K\" = \"7\",\n    \"Greater than $75K\" = \"8\"),\n         sex = fct_recode(sex,\n    \"Female\" = \"0\",\n    \"Male\" = \"1\")\n  )\n\nOk, that should be it for formatting, recoding and general data structure updates. Let’s check it out before moving on:\n\nstr(data3)\n\ntibble [253,680 × 22] (S3: tbl_df/tbl/data.frame)\n $ diabetesBin: Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 2 1 ...\n $ highBP     : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 2 2 2 2 2 2 1 ...\n $ highChol   : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 1 2 2 1 2 2 1 ...\n $ cholCheck  : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 2 2 2 2 2 2 2 ...\n $ bmi        : int [1:253680] 40 25 28 27 24 25 30 25 30 24 ...\n $ smoker     : Factor w/ 2 levels \"No\",\"Yes\": 2 2 1 1 1 2 2 2 2 1 ...\n $ stroke     : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n $ heartProb  : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 2 1 ...\n $ physAct    : Factor w/ 2 levels \"No\",\"Yes\": 1 2 1 2 2 2 1 2 1 1 ...\n $ fruits     : Factor w/ 2 levels \"No\",\"Yes\": 1 1 2 2 2 2 1 1 2 1 ...\n $ veg        : Factor w/ 2 levels \"No\",\"Yes\": 2 1 1 2 2 2 1 2 2 2 ...\n $ etOH       : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n $ hlthCare   : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 2 2 2 2 2 2 2 ...\n $ noDoc      : Factor w/ 2 levels \"No\",\"Yes\": 1 2 2 1 1 1 1 1 1 1 ...\n $ genHlth    : Factor w/ 5 levels \"Excellent\",\"Very Good\",..: 5 3 5 2 2 2 3 3 5 2 ...\n $ mentHlth   : int [1:253680] 18 0 30 0 3 0 0 0 30 0 ...\n $ physHlth   : int [1:253680] 15 0 30 0 0 2 14 0 30 0 ...\n $ diffWalk   : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 1 1 1 1 2 2 1 ...\n $ sex        : Factor w/ 2 levels \"Female\",\"Male\": 1 1 1 1 1 2 1 1 1 2 ...\n $ age        : Factor w/ 13 levels \"18 to 24\",\"25 to 30\",..: 9 7 9 11 11 10 9 11 9 8 ...\n $ edu        : Factor w/ 6 levels \"No School/Only Kindergarten\",..: 4 6 4 3 5 6 6 4 5 4 ...\n $ income     : Factor w/ 8 levels \"Less than $10K\",..: 3 1 8 6 4 8 7 4 1 3 ...\n\n\nNow let’s take a look at the dataset itself:\n\nhead(data3)\n\n# A tibble: 6 × 22\n  diabetesBin highBP highChol cholCheck   bmi smoker stroke heartProb physAct\n  &lt;fct&gt;       &lt;fct&gt;  &lt;fct&gt;    &lt;fct&gt;     &lt;int&gt; &lt;fct&gt;  &lt;fct&gt;  &lt;fct&gt;     &lt;fct&gt;  \n1 No          Yes    Yes      Yes          40 Yes    No     No        No     \n2 No          No     No       No           25 Yes    No     No        Yes    \n3 No          Yes    Yes      Yes          28 No     No     No        No     \n4 No          Yes    No       Yes          27 No     No     No        Yes    \n5 No          Yes    Yes      Yes          24 No     No     No        Yes    \n6 No          Yes    Yes      Yes          25 Yes    No     No        Yes    \n# ℹ 13 more variables: fruits &lt;fct&gt;, veg &lt;fct&gt;, etOH &lt;fct&gt;, hlthCare &lt;fct&gt;,\n#   noDoc &lt;fct&gt;, genHlth &lt;fct&gt;, mentHlth &lt;int&gt;, physHlth &lt;int&gt;, diffWalk &lt;fct&gt;,\n#   sex &lt;fct&gt;, age &lt;fct&gt;, edu &lt;fct&gt;, income &lt;fct&gt;\n\n\nOk, this looks as I expected. The binary factors are Yes or No, the integer variables are integers, and more complex factors have the character string descriptors attached to each level. Let’s move on to visualization.\n\n\n\nFirstly, I had asked a question on the class discussion board on the modeling of the numeric values using factors or numerical values. From the responses in the class discussion board and in my own personal readings, it seems that these variables (mentHlth and physHlth) should be modeled as numeric inputs (if they were to be modeled).\n\n#create bar chart fo mentHlth\nmentHlthChart&lt;- ggplot(data3, aes(x=mentHlth),) +\n  geom_bar(aes(y = after_stat(prop), group = 1))\nmentHlthChart\n\n\n\n\n\n\n\n\nNext, we’ll plot the physHlth variable\n\nphysHlthChart&lt;- ggplot(data3, aes(x=physHlth),) +\n  geom_bar(aes(y = after_stat(prop), group = 1))\nphysHlthChart\n\n\n\n\n\n\n\n\nThese are both interesting plots. For both variables, there are major peaks at 0 and 30. In addition, it almost appears as if there are small, local peaks at multiples of 5 which leads me to think that these scales may not be as useful as desired and respondents may be providing “easy” number estimates. We won’t explore these variables further in this analysis since these do not fit with what I’d like to explore…variables that can be generally be directly controlled by the individual. Physical health and Mental Health may or may not be under the control of the person.\nHow is age associated with directly actionable variables? Let’s start with physAct. Do people do less physical activity as they get older?\n\n#create bar chart that shows percentage of respondents who have performed phycical activity in the last 30 days vs. those who have not at each age level.\nactAge &lt;- ggplot(data3, aes(age, fill=physAct)) +\n  geom_bar(position=\"fill\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(x = \"Age Group\",\n      y = \"Fraction of Respondents\",\n      title = \"Respondents Who Have Done Physical Activity in the Last 30 Days\")\nactAge\n\n\n\n\n\n\n\n\nIt does appear as if the overall activity level decreases as the respondents get older. Let’s explore the association of Age with other actionable variables. Do respondents generally “get healthier” as they get older?\n\n#create bar chart that shows percentage of respondents who consume vegetables at least once a day vs. those who have not at each age level.\nvegAge &lt;- ggplot(data3, aes(age, fill=veg)) +\n  geom_bar(position=\"fill\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(x = \"Age Group\",\n      y = \"Fraction of Respondents\",\n      title = \"Respondents Who Consume Vegetables Once A Day\")\nvegAge\n\n\n\n\n\n\n\n\nThe changes in vegetable consumption by age group appear small. Next, let’s look at fruit consumption by age group.\n\n#create bar chart that shows percentage of respondents who consume fruits at least once a day vs. those who have not at each age level.\nfruitAge &lt;- ggplot(data3, aes(age, fill=fruits)) +\n  geom_bar(position=\"fill\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(x = \"Age Group\",\n      y = \"Fraction of Respondents\",\n      title = \"Respondents Who Consume Fruit Once A Day\")\nfruitAge\n\n\n\n\n\n\n\n\nIt looks like fruit consumption has a slight positive trend as age increases. Now let’s look at some things that are deemed “unhealthy”. Does excessive drinking decrease with age?\n\n#create bar chart that shows percentage of respondents who are heavy drinkers vs. those who are not at each age level.\netOHAge &lt;- ggplot(data3, aes(age, fill=etOH)) +\n  geom_bar(position=\"fill\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(x = \"Age Group\",\n      y = \"Fraction of Respondents\",\n      title = \"Respondents Who Are Heavy Drinkers\")\netOHAge\n\n\n\n\n\n\n\n\nThis is difficult to visualize any trends, as any changes appear small. There may be evidence that older respondents drink less overall. Maybe we can see a diffence if we seperate by sex.\n\n#create bar chart that shows percentage of respondents who are heavy alcohol consumers vs. those who are not at each age level and by sex.\netOHAgeSex &lt;- ggplot(data3, aes(age, fill=etOH)) +\n  geom_bar(position=\"fill\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(x = \"Age Group\",\n      y = \"Fraction of Respondents\",\n      title = \"Respondents Who Are Heavy Drinkers\") +\n  facet_wrap(vars(sex))\netOHAgeSex\n\n\n\n\n\n\n\n\nThere does not appear to be much difference between the sexes.\nLet’s look at the smoking response. Does the act of smoking at least 100 cigarettes in your lifetime increase with age?\n\n#create bar chart that shows percentage of respondents who have smoke at least 100 cigarettes vs. those who have not at each age level.\nsmokeAge &lt;- ggplot(data3, aes(age, fill=smoker)) +\n  geom_bar(position=\"fill\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(x = \"Age Group\",\n      y = \"Fraction of Respondents\",\n      title = \"Respondents Who Have Smoke 100 or more Cigarettes in Their Lifetime\")\nsmokeAge\n\n\n\n\n\n\n\n\nIt looks like older age groups have smoked more, and just under half of all respondents have smoke at least 100 cigarettes in their lifetimes.\nLastly, is diabetic diagnosis relative to age?\n\n#create bar chart that shows percentage of respondents who have been diagnosed with diabetes vs. those who have not at each age level.\ndiagAge &lt;- ggplot(data3, aes(age, fill=diabetesBin)) +\n  geom_bar(position=\"fill\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(x = \"Age Group\",\n      y = \"Fraction of Respondents\",\n      title = \"Respondents Who Are/Have Been Diagnosed with Diabetes\")\ndiagAge\n\n\n\n\n\n\n\n\nIt appears that diabetes increases with age group. The previous charts have shown various trajectories for “healthy” habits relative to age. For instance, the prevalence of physical activity outside of work decreases with age. The changes in consumption of fruits and vegetables is hard to see if there is any meaningful change from these visuals. Heavy drinking decreases with age and smoking increases with age group. Hopefully our numeric summaries and modeling can create more rigorous and convincing interpretations of these predictors on risk of diabetes.\n\n\n\n\n\n\nNote\n\n\n\nThe increase in smoking does not mean that people smoke more as they age. It could mean that or it mean that society’s views on smoking have changed and smokers are moving towards aging out of the population.\n\n\n\n\n\nHow many of the respondents have diabetes?\n\ntable(data3$diabetesBin)\n\n\n    No    Yes \n218334  35346 \n\n\nHow many males and how many females have/have had diabetes?\n\ntable(data3$diabetesBin, data3$sex)\n\n     \n      Female   Male\n  No  123563  94771\n  Yes  18411  16935\n\n\nLet’s calculate a percentage of respondents who have diabetes.\n\n#this code will count 'yes' responses in diabetesBin and divide by total rows (there is no missing data) to generate a percentage of respondents that responded 'yes\" to having diabetes.\npos &lt;- data3 |&gt;\n  filter((diabetesBin %in% \"Yes\")) |&gt;\n  nrow()\ndiabetesPct &lt;- pos/nrow(data3)*100\n#diabetesPct\n\nApproximately 14% of respondents overall have or have had diabetes in some form.\nIs there a diabetes risk associated with sex? We saw above the numbers of males and females with and without diabetes. Let’s calculate proporation of diabetics for each sex.\n\n#calculate # of males with diabetes\nposMale &lt;- data3 |&gt;\n  filter((diabetesBin %in% \"Yes\" & sex %in% \"Male\")) |&gt;\n  nrow()\n#calculate total number of males\nnMale &lt;- data3 |&gt;\n  filter(sex %in% \"Male\") |&gt;\n  nrow()\n#calculate percentage of males who have diabetes\nposMalePct &lt;- posMale/nMale*100\n#posMalePct\n\nposFem &lt;- data3 |&gt;\n  filter((diabetesBin %in% \"Yes\" & sex %in% \"Female\")) |&gt;\n  nrow()\n#calculate total number of males\nnFem &lt;- data3 |&gt;\n  filter(sex %in% \"Female\") |&gt;\n  nrow()\n#calculate percentage of males who have diabetes and create tibble for display\nposFemPct &lt;- posFem/nFem*100\n#posFemPct\n#create tibble for data display\nposPcts &lt;- as_tibble(cbind(posMalePct, posFemPct))\nnames(posPcts) &lt;- c(\"% Males with Diabetes\", \"% Females with Diabetes\")\nposPcts\n\n# A tibble: 1 × 2\n  `% Males with Diabetes` `% Females with Diabetes`\n                    &lt;dbl&gt;                     &lt;dbl&gt;\n1                    15.2                      13.0\n\n\nApproximately 15% of Male respondents have/have had diabetes and approximately 13% of Female respondents have/have had diabetes. It seems that males may be slightly more at risk of developing the condition.\n\n\n\nBelow, we’ll check out if physical activity helps derisk diabetes.\n\n#calculate number of people without diabetes who have also been active in the past 30 days.\nnegAct &lt;- data3 |&gt;\n  filter((diabetesBin %in% \"No\" & physAct %in% \"Yes\")) |&gt;\n  nrow()\n#calculate total number of respondents who were active in the last 30 days.\nnAct &lt;- data3 |&gt;\n  filter(physAct %in% \"Yes\") |&gt;\n  nrow()\n#calculate percentage of active respondents who do not have diabetes\nnegActPct &lt;- negAct/nAct*100\n#negActPct\n\n88% of respondents who have been active in the past 30 days do not have and have not had diabetes. This doesn’t really mean much by itself. We’ll see further down how this compares to non-active responders.\nWe can also generate similar stats for other actionable factor variables using the prop.table() function. Let’s check out some diet relationships with diabetes.\n\n#generate contingency table and use addmargins() to get marginal percentages\nvegTable &lt;- table(data3$diabetesBin, data3$veg)\nvegTablePct&lt;- addmargins(prop.table(vegTable))\nvegTablePct\n\n     \n             No       Yes       Sum\n  No  0.1546397 0.7060273 0.8606670\n  Yes 0.0339404 0.1053926 0.1393330\n  Sum 0.1885801 0.8114199 1.0000000\n\n\nThis is a little difficult to interpret because both variable levels are “YES” and “NO”. However, the behavior of the table() function puts the first argument on the y-axis and the second argument on the x-axis. It is also difficult to make sense any these percentages, since they are percentages of the total responses. We can generate ratios for combinations of values from each variable.\n\n#proportion of healthy choice associated with diabetes, and proportion of unhealthy choice associated with diabetes.\nposVegProp &lt;- vegTablePct[2,2]/vegTablePct[3,2]\n#posVegProp\n#proportion of respondents who choose unhealthy activities who were diagnosed with diabetes\nposNoVegProp &lt;- vegTablePct[2,1]/vegTablePct[3,1]\n#posNoVegProp\n\n#create tibble of ratios and rename columns for display.\nvegPropTab &lt;- as_tibble(cbind(posVegProp, posNoVegProp))\nnames(vegPropTab) &lt;- c(\"Vegetable Eaters With Diabetes\", \"Non-Vegetable Eaters With Diabetes\")\n#vegPropTab\n\nThe proportion of people who ate vegetables and developed diabetes is lower than the proportion of people who did not eat vegetables and developed diabetes. Let’s evaluate this same ratio for fruit consumption.\n\n#generate contingency table and use addmargins() to get marginal percentages\nfruitTable &lt;- table(data3$diabetesBin, data3$fruits)\nfruitTablePct&lt;- addmargins(prop.table(fruitTable))\nfruitTablePct\n\n     \n              No        Yes        Sum\n  No  0.30798250 0.55268448 0.86066698\n  Yes 0.05776175 0.08157127 0.13933302\n  Sum 0.36574424 0.63425576 1.00000000\n\n\n\n#proportion of healthy choice associated with diabetes, and proportion of unhealthy choice associated with diabetes.\nposFruitProp &lt;- fruitTablePct[2,2]/fruitTablePct[3,2]\n#posFruitProp\n#proportion of respondents who choose unhealthy activities who were diagnosed with diabetes\nposNoFruitProp &lt;- fruitTablePct[2,1]/fruitTablePct[3,1]\n#posNoFruitProp\n\n#create tibble of ratios and rename columns for display.\nfruitPropTab &lt;- as_tibble(cbind(posFruitProp, posNoFruitProp))\nnames(fruitPropTab) &lt;- c(\"Fruit Eaters With Diabetes\", \"Non-Fruit Eaters With Diabetes\")\nfruitPropTab\n\n# A tibble: 1 × 2\n  `Fruit Eaters With Diabetes` `Non-Fruit Eaters With Diabetes`\n                         &lt;dbl&gt;                            &lt;dbl&gt;\n1                        0.129                            0.158\n\n\nThe proportion of people who ate fruit and developed diabetes is lower than the proportion of people who did not eat vegetables and developed diabetes.\nLet’s move on to the activities that are commonly labeled as “risky,” smoking and drinking and calculate similar proportions.\n\n#generate contingency table and use addmargins() to get marginal percentages\nsmokeTable &lt;- table(data3$diabetesBin, data3$smoker)\nsmokeTablePct&lt;- addmargins(prop.table(smokeTable))\nsmokeTablePct\n\n     \n              No        Yes        Sum\n  No  0.48970356 0.37096342 0.86066698\n  Yes 0.06712788 0.07220514 0.13933302\n  Sum 0.55683144 0.44316856 1.00000000\n\n\n\n#proportion of healthy lifestyle choice for diabetics and proportion of unhealthy choice for diabetics, switching logic to have same order of \"good:bad\".\nposNoSmokeProp &lt;- smokeTablePct[2,1]/smokeTablePct[3,1]\n#posNoSmokeProp\n#proportion of respondents who choose unhealthy activities who were diagnosed with diabetes\nposSmokeProp &lt;- smokeTablePct[2,2]/smokeTablePct[3,2]\n#posSmokeProp\n\n#create tibble of ratios and rename columns for display.\nsmokePropTab &lt;- as_tibble(cbind(posNoSmokeProp, posSmokeProp))\nnames(smokePropTab) &lt;- c(\"Non-smokers With Diabetes\", \"Smokers With Diabetes\")\nsmokePropTab\n\n# A tibble: 1 × 2\n  `Non-smokers With Diabetes` `Smokers With Diabetes`\n                        &lt;dbl&gt;                   &lt;dbl&gt;\n1                       0.121                   0.163\n\n\nThe proportion of people who did not smoke at least 100 cigarettes in their lifetime and developed diabetes is lower than the proportion of people who did smoke that many cigarettes and developed diabetes.\nNow we’ll explore the choice of heavy alcohol consumption and its relationship to diabetes.\n\n#generate contingency table and use addmargins() to get marginal percentages\netOHTable &lt;- table(data3$diabetesBin, data3$etOH)\netOHTablePct&lt;- addmargins(prop.table(etOHTable))\netOHTablePct\n\n     \n               No         Yes         Sum\n  No  0.807749921 0.052917061 0.860666982\n  Yes 0.136053295 0.003279722 0.139333018\n  Sum 0.943803217 0.056196783 1.000000000\n\n\n\n#proportion of healthy lifestyle choice for diabetics and proportion of unhealthy choice for diabetics, switching logic to have same order of \"good:bad\".\nposNoetOHProp &lt;- etOHTablePct[2,1]/etOHTablePct[3,1]\n#posNoSmokeProp\n#proportion of respondents who choose unhealthy activities who were diagnosed with diabetes\nposetOHProp &lt;- etOHTablePct[2,2]/etOHTablePct[3,2]\n#posetOHProp\n\n#create tibble of ratios and rename columns for display.\netOHPropTab &lt;- as_tibble(cbind(posNoetOHProp, posetOHProp))\nnames(etOHPropTab) &lt;- c(\"Non-Bingers With Diabetes\", \"Bingers With Diabetes\")\netOHPropTab\n\n# A tibble: 1 × 2\n  `Non-Bingers With Diabetes` `Bingers With Diabetes`\n                        &lt;dbl&gt;                   &lt;dbl&gt;\n1                       0.144                  0.0584\n\n\nOverall, the proportion of people who did not drink heavily (“binge”) is higher than the proportion of those who did binge and develop diabetes. I did not expect this.\nWe already calculated similar proportions above for physAct, but let’s do it here again in the same format as the other variables so that we can combine all the tables into a single table for ease of visualization.\n\n#generate contingency table and use addmargins() to get marginal percentages\nactTable &lt;- table(data3$diabetesBin, data3$physAct)\nactTablePct&lt;- addmargins(prop.table(actTable))\nactTablePct\n\n     \n              No        Yes        Sum\n  No  0.19197808 0.66868890 0.86066698\n  Yes 0.05147824 0.08785478 0.13933302\n  Sum 0.24345632 0.75654368 1.00000000\n\n\n\n#proportion of healthy choice associated with diabetes, and proportion of unhealthy choice associated with diabetes..\nposActProp &lt;- actTablePct[2,2]/actTablePct[3,2]\n#posActProp\n#proportion of respondents who choose unhealthy activities who were diagnosed with diabetes\nposNoActProp &lt;- actTablePct[2,1]/actTablePct[3,1]\n#posNoActProp\n\n#create tibble of ratios and rename columns for display.\nactPropTab &lt;- as_tibble(cbind(posActProp, posNoActProp))\nnames(actPropTab) &lt;- c(\"Active People With Diabetes\", \"Non-Active People With Diabetes\")\nactPropTab\n\n# A tibble: 1 × 2\n  `Active People With Diabetes` `Non-Active People With Diabetes`\n                          &lt;dbl&gt;                             &lt;dbl&gt;\n1                         0.116                             0.211\n\n\nNon-diabetics generally have a more active lifestyle than diabetics. The proportion of non-active people who develop diabetes is almost double the proportion of active people who develop the disease.\nLet’s combine all of the variable proportions into a single tibble for ease of viewing the proportions side-by-side.\n\n#rename all variables of the proportion tables to \"healthy\" or \"unhealthy\" so they can be bound into a single table. Use name index to rename all tables with the same syntax.\nveg &lt;- vegPropTab |&gt;\n  rename(\"healthy\" = 1,\n         \"unhealthy\" = 2)\nveg$source &lt;- \"veg\"\n\nfruit &lt;- fruitPropTab |&gt;\n  rename(\"healthy\" = 1,\n         \"unhealthy\" = 2)\nfruit$source &lt;- \"fruit\"\n\nsmoke &lt;- smokePropTab |&gt;\n  rename(\"healthy\" = 1,\n         \"unhealthy\" = 2)\nsmoke$source &lt;- \"smoker\"\n\netOH &lt;- etOHPropTab |&gt;\n  rename(\"healthy\" = 1,\n         \"unhealthy\" = 2)\netOH$source &lt;- \"drinker\"\n\nact &lt;- actPropTab |&gt;\n  rename(\"healthy\" = 1,\n         \"unhealthy\" = 2)\nact$source &lt;- \"active\"\n\n#combine all tables into singel table\npropTable &lt;- rbind(veg, fruit, smoke, etOH, act)\npropTable\n\n# A tibble: 5 × 3\n  healthy unhealthy source \n    &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;  \n1   0.130    0.180  veg    \n2   0.129    0.158  fruit  \n3   0.121    0.163  smoker \n4   0.144    0.0584 drinker\n5   0.116    0.211  active \n\n\n\n\nThis last tibble compares the proportions of respondents who have chosen healthy options who have developed diabetes against the proportions of respondents who have non chosen healthy options who have developed diabetes. On the surface, it seems that you could potentially pick the healthy choice in 4/5 categories and have a lower risk of developing diabetes. However, the alcohol variable is perplexing. Additionally, each of these proportions is calculated “in a vacuum” in the sense that they do not take other variables into consideration. The regression tree and random forest models should take care of that and help us to understand if any of the variables are more important than others when understanding risk of developing diabetes and how lifestyle choices can impact that outcome."
  },
  {
    "objectID": "EDA.html#introduction",
    "href": "EDA.html#introduction",
    "title": "EDA",
    "section": "",
    "text": "The prevalence of Diabetes has increased from 200 million to 830 million cases worldwide from 1990 to 2022. In 2021 diabetes and diabetes related complications were implicated in over 2 million deaths. WHO\nThe Behavioral Risk Factor Surveillance System (BRFSS) is a survey that is conducted annually by the CDC and responses are collected from over 400,000 Americans. This survery has been conducted yearly since 1984. The dataset to be analyzed for this project (“diabetes_binary_health_indicators_BRFSS2015.csv”) contains 253,680 responses to the survey. There are three dependent variable levels, 0=no diabetes or only during pregnancy, 1=prediabetes, and 2= diabetes. There are two factor levels for the dependent variable; 0=no diabetes and 1=diabetes. There is class imbalance in the dataset and there are 21 feature variables. Diabetes Health Indicators Dataset\nMost of the variables appear to be factor type variables (e.g., numbers are used to encode a class), and they will be explored and reformatted during the EDA below. In order to simplify the model fitting, I plan to explore “actionable” variables, or variables that the respondents can generally exert active control over in their lives (e.g.: Vegetable Consumption, Fruit Consumption, Smoking, Heavy Drinking, and Physical Activity), plus two intrinsic variables (Age and Sex). Each of these feature variables is a binary variable (Yes/No, Male/Female), except age is a factor type variable with 13 levels and will need to be coerced to factor and renamed. The dependent variable (Diabetes_binary) is also a binary variable that takes on “Yes” or “No”. A response of “Yes” means that the respondent has diabetes and a response of “No” means that the respondent does not have diabetes.\nThe purpose of this EDA is to understand the structure of the entire dataset, reformat the raw data as appropriate for downstream model fitting, and to see if there are any theories that we can formulate just bey visualizing simple charts. The data will eventually be evaluate two models (classification tree and random forest) by using 5-fold cross validation. The overall goal of this will be to select the better model for predicting whether or not a respondent is at risk of diabetes using the Diabetes_binary variable."
  },
  {
    "objectID": "EDA.html#data-import-structure-evalution-and-reformatting",
    "href": "EDA.html#data-import-structure-evalution-and-reformatting",
    "title": "EDA",
    "section": "",
    "text": "The data were downloaded from the source and saved locally on my hard drive. They will be imported below, evaluated, and formatted for the downstream uses of visualization and modelling.\nThe first step is to load libraries necessary for data exploration:\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.2.3\n\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nWarning: package 'tibble' was built under R version 4.2.3\n\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\n\nWarning: package 'readr' was built under R version 4.2.3\n\n\nWarning: package 'purrr' was built under R version 4.2.3\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\nWarning: package 'stringr' was built under R version 4.2.2\n\n\nWarning: package 'forcats' was built under R version 4.2.3\n\n\nWarning: package 'lubridate' was built under R version 4.2.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nHere we’ll read in the data using the readr::read_csv command\n\n#read csv file\ndata &lt;- read_csv(\"../diabetes_binary_health_indicators_BRFSS2015.csv\")\n\nRows: 253680 Columns: 22\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (22): Diabetes_binary, HighBP, HighChol, CholCheck, BMI, Smoker, Stroke,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nIs there any missing data?\n\n#sum total number of rows where data is missing\ncolSums(is.na(data))\n\n     Diabetes_binary               HighBP             HighChol \n                   0                    0                    0 \n           CholCheck                  BMI               Smoker \n                   0                    0                    0 \n              Stroke HeartDiseaseorAttack         PhysActivity \n                   0                    0                    0 \n              Fruits              Veggies    HvyAlcoholConsump \n                   0                    0                    0 \n       AnyHealthcare          NoDocbcCost              GenHlth \n                   0                    0                    0 \n            MentHlth             PhysHlth             DiffWalk \n                   0                    0                    0 \n                 Sex                  Age            Education \n                   0                    0                    0 \n              Income \n                   0 \n\n\nNo missing data! This matches the description of the data on the source webpage.\nNow that the data are in the R global environment, it will be useful to understand the variables and the data types they were assigned upon import and this will help us to think about how best to reformat the data for future steps. We’ll use a few commands to do this: str() will give us the overall structure and can help to visualize the number of values for categorical variables and head() will help us to see the first 6 rows of the data to further understand information provided by str().\n\n#use str() to check out variable data types and values.\nstr(data)\n\nspc_tbl_ [253,680 × 22] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Diabetes_binary     : num [1:253680] 0 0 0 0 0 0 0 0 1 0 ...\n $ HighBP              : num [1:253680] 1 0 1 1 1 1 1 1 1 0 ...\n $ HighChol            : num [1:253680] 1 0 1 0 1 1 0 1 1 0 ...\n $ CholCheck           : num [1:253680] 1 0 1 1 1 1 1 1 1 1 ...\n $ BMI                 : num [1:253680] 40 25 28 27 24 25 30 25 30 24 ...\n $ Smoker              : num [1:253680] 1 1 0 0 0 1 1 1 1 0 ...\n $ Stroke              : num [1:253680] 0 0 0 0 0 0 0 0 0 0 ...\n $ HeartDiseaseorAttack: num [1:253680] 0 0 0 0 0 0 0 0 1 0 ...\n $ PhysActivity        : num [1:253680] 0 1 0 1 1 1 0 1 0 0 ...\n $ Fruits              : num [1:253680] 0 0 1 1 1 1 0 0 1 0 ...\n $ Veggies             : num [1:253680] 1 0 0 1 1 1 0 1 1 1 ...\n $ HvyAlcoholConsump   : num [1:253680] 0 0 0 0 0 0 0 0 0 0 ...\n $ AnyHealthcare       : num [1:253680] 1 0 1 1 1 1 1 1 1 1 ...\n $ NoDocbcCost         : num [1:253680] 0 1 1 0 0 0 0 0 0 0 ...\n $ GenHlth             : num [1:253680] 5 3 5 2 2 2 3 3 5 2 ...\n $ MentHlth            : num [1:253680] 18 0 30 0 3 0 0 0 30 0 ...\n $ PhysHlth            : num [1:253680] 15 0 30 0 0 2 14 0 30 0 ...\n $ DiffWalk            : num [1:253680] 1 0 1 0 0 0 0 1 1 0 ...\n $ Sex                 : num [1:253680] 0 0 0 0 0 1 0 0 0 1 ...\n $ Age                 : num [1:253680] 9 7 9 11 11 10 9 11 9 8 ...\n $ Education           : num [1:253680] 4 6 4 3 5 6 6 4 5 4 ...\n $ Income              : num [1:253680] 3 1 8 6 4 8 7 4 1 3 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Diabetes_binary = col_double(),\n  ..   HighBP = col_double(),\n  ..   HighChol = col_double(),\n  ..   CholCheck = col_double(),\n  ..   BMI = col_double(),\n  ..   Smoker = col_double(),\n  ..   Stroke = col_double(),\n  ..   HeartDiseaseorAttack = col_double(),\n  ..   PhysActivity = col_double(),\n  ..   Fruits = col_double(),\n  ..   Veggies = col_double(),\n  ..   HvyAlcoholConsump = col_double(),\n  ..   AnyHealthcare = col_double(),\n  ..   NoDocbcCost = col_double(),\n  ..   GenHlth = col_double(),\n  ..   MentHlth = col_double(),\n  ..   PhysHlth = col_double(),\n  ..   DiffWalk = col_double(),\n  ..   Sex = col_double(),\n  ..   Age = col_double(),\n  ..   Education = col_double(),\n  ..   Income = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\nAll of the variables are numeric. Let’s see what the actual data look like.\n\nhead(data)\n\n# A tibble: 6 × 22\n  Diabetes_binary HighBP HighChol CholCheck   BMI Smoker Stroke\n            &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1               0      1        1         1    40      1      0\n2               0      0        0         0    25      1      0\n3               0      1        1         1    28      0      0\n4               0      1        0         1    27      0      0\n5               0      1        1         1    24      0      0\n6               0      1        1         1    25      1      0\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;dbl&gt;, PhysActivity &lt;dbl&gt;,\n#   Fruits &lt;dbl&gt;, Veggies &lt;dbl&gt;, HvyAlcoholConsump &lt;dbl&gt;, AnyHealthcare &lt;dbl&gt;,\n#   NoDocbcCost &lt;dbl&gt;, GenHlth &lt;dbl&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;dbl&gt;, Sex &lt;dbl&gt;, Age &lt;dbl&gt;, Education &lt;dbl&gt;, Income &lt;dbl&gt;\n\n\nWe know from the description of the dataset that Diabetes_binary is is a factor type variable, with 0, 1, and 2 representing different diabetes “diagnoses”. We’ll use the descriptions provided with the data to format the dataset.\nI’d like to understand what values are available for the factor type variables in this dataset so that I can set values appropriate, or verify that they were set by R appropriately. The description of the Diabetes_binary variable appears to have three levels, but the chart immediately under it shows a binary response. Diabetes_binary.\n\n#create count table of levels\ntable(data$Diabetes_binary)\n\n\n     0      1 \n218334  35346 \n\n\nOk, the description on the webpage appears to be mis-specified. This does appear to be a binary response with two levels (0,1)\nLet’s change the factor type variables to factors in the dataset. We’ll create a list of the variables that we want to change to factors, then we’ll change the names of all the variables, then we’ll apply the factor list through the factor() function to selectively change the variables to . We’ll also change a few variables to integers at the same time using the same logic and the as.interger function.\n\n#create list of variables to change to factor\nfactors&lt;-c(\"diabetesBin\", \"highBP\", \"highChol\", \"cholCheck\", \"smoker\", \"stroke\", \"heartProb\", \"physAct\", \"fruits\", \"veg\", \"etOH\", \"hlthCare\", \"noDoc\", \"genHlth\", \"diffWalk\", \"sex\", \"age\", \"edu\", \"income\")\n#create list of variables to change to integers\nintegers&lt;-c(\"bmi\", \"mentHlth\", \"physHlth\")\n#use rename() to rename all variables for consistency and mutate() to change each list to appropriate data type\ndata1 &lt;- data |&gt;\n  rename(\"diabetesBin\" = \"Diabetes_binary\",\n         \"highBP\" = \"HighBP\",\n         \"highChol\" = \"HighChol\",\n         \"cholCheck\" = \"CholCheck\",\n         \"bmi\" = \"BMI\",\n         \"smoker\" = \"Smoker\",\n         \"stroke\" = \"Stroke\",\n         \"heartProb\" = \"HeartDiseaseorAttack\",\n         \"physAct\" = \"PhysActivity\",\n         \"fruits\" = \"Fruits\",\n         \"veg\" = \"Veggies\",\n         \"etOH\" = \"HvyAlcoholConsump\",\n         \"hlthCare\" =\"AnyHealthcare\",\n         \"noDoc\" = \"NoDocbcCost\",\n         \"genHlth\" = \"GenHlth\",\n         \"mentHlth\" = \"MentHlth\",\n         \"physHlth\" = \"PhysHlth\",\n         \"diffWalk\" = \"DiffWalk\",\n         \"sex\" = \"Sex\",\n         \"age\" = \"Age\",\n         \"edu\" = \"Education\",\n         \"income\" = \"Income\"\n         ) |&gt;\n  mutate_at(factors, factor) |&gt;\n  mutate_at(integers, as.integer)\n\nWe’ll still should redefine some of the factors to have a value that helps us understand the dataset, but let’s check everything out first to make sure it makes sense.\n\nstr(data1)\n\ntibble [253,680 × 22] (S3: tbl_df/tbl/data.frame)\n $ diabetesBin: Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 2 1 ...\n $ highBP     : Factor w/ 2 levels \"0\",\"1\": 2 1 2 2 2 2 2 2 2 1 ...\n $ highChol   : Factor w/ 2 levels \"0\",\"1\": 2 1 2 1 2 2 1 2 2 1 ...\n $ cholCheck  : Factor w/ 2 levels \"0\",\"1\": 2 1 2 2 2 2 2 2 2 2 ...\n $ bmi        : int [1:253680] 40 25 28 27 24 25 30 25 30 24 ...\n $ smoker     : Factor w/ 2 levels \"0\",\"1\": 2 2 1 1 1 2 2 2 2 1 ...\n $ stroke     : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n $ heartProb  : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 2 1 ...\n $ physAct    : Factor w/ 2 levels \"0\",\"1\": 1 2 1 2 2 2 1 2 1 1 ...\n $ fruits     : Factor w/ 2 levels \"0\",\"1\": 1 1 2 2 2 2 1 1 2 1 ...\n $ veg        : Factor w/ 2 levels \"0\",\"1\": 2 1 1 2 2 2 1 2 2 2 ...\n $ etOH       : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n $ hlthCare   : Factor w/ 2 levels \"0\",\"1\": 2 1 2 2 2 2 2 2 2 2 ...\n $ noDoc      : Factor w/ 2 levels \"0\",\"1\": 1 2 2 1 1 1 1 1 1 1 ...\n $ genHlth    : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 5 3 5 2 2 2 3 3 5 2 ...\n $ mentHlth   : int [1:253680] 18 0 30 0 3 0 0 0 30 0 ...\n $ physHlth   : int [1:253680] 15 0 30 0 0 2 14 0 30 0 ...\n $ diffWalk   : Factor w/ 2 levels \"0\",\"1\": 2 1 2 1 1 1 1 2 2 1 ...\n $ sex        : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 2 1 1 1 2 ...\n $ age        : Factor w/ 13 levels \"1\",\"2\",\"3\",\"4\",..: 9 7 9 11 11 10 9 11 9 8 ...\n $ edu        : Factor w/ 6 levels \"1\",\"2\",\"3\",\"4\",..: 4 6 4 3 5 6 6 4 5 4 ...\n $ income     : Factor w/ 8 levels \"1\",\"2\",\"3\",\"4\",..: 3 1 8 6 4 8 7 4 1 3 ...\n\n\nOk, everything is making sense! Now we need to give some useful levels to the factors. We’ll use fct_recode for this purpose. We will rely on the dataset description to assign numeric levels to character levels that help us understand the data a little more clearly.\n\n#create list of yes/no factors to be coded where 0=no, 1=yes\nyesNo &lt;- c(\"diabetesBin\", \"highBP\", \"highChol\", \"cholCheck\", \"smoker\", \"stroke\", \"heartProb\", \"physAct\", \"fruits\", \"veg\", \"etOH\", \"hlthCare\", \"noDoc\", \"diffWalk\")\n#mutate_at the list yesNo and equate 0 to no and 1 to yes.\ndata2 &lt;- data1 |&gt; \n  mutate_at(.vars = yesNo,\n            .funs = fct_recode,\n            \"Yes\" = \"1\",\n            \"No\" = \"0\")\n\nLet’s check quickly to see if that worked as expected…\n\nstr(data2)\n\ntibble [253,680 × 22] (S3: tbl_df/tbl/data.frame)\n $ diabetesBin: Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 2 1 ...\n $ highBP     : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 2 2 2 2 2 2 1 ...\n $ highChol   : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 1 2 2 1 2 2 1 ...\n $ cholCheck  : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 2 2 2 2 2 2 2 ...\n $ bmi        : int [1:253680] 40 25 28 27 24 25 30 25 30 24 ...\n $ smoker     : Factor w/ 2 levels \"No\",\"Yes\": 2 2 1 1 1 2 2 2 2 1 ...\n $ stroke     : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n $ heartProb  : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 2 1 ...\n $ physAct    : Factor w/ 2 levels \"No\",\"Yes\": 1 2 1 2 2 2 1 2 1 1 ...\n $ fruits     : Factor w/ 2 levels \"No\",\"Yes\": 1 1 2 2 2 2 1 1 2 1 ...\n $ veg        : Factor w/ 2 levels \"No\",\"Yes\": 2 1 1 2 2 2 1 2 2 2 ...\n $ etOH       : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n $ hlthCare   : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 2 2 2 2 2 2 2 ...\n $ noDoc      : Factor w/ 2 levels \"No\",\"Yes\": 1 2 2 1 1 1 1 1 1 1 ...\n $ genHlth    : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 5 3 5 2 2 2 3 3 5 2 ...\n $ mentHlth   : int [1:253680] 18 0 30 0 3 0 0 0 30 0 ...\n $ physHlth   : int [1:253680] 15 0 30 0 0 2 14 0 30 0 ...\n $ diffWalk   : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 1 1 1 1 2 2 1 ...\n $ sex        : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 2 1 1 1 2 ...\n $ age        : Factor w/ 13 levels \"1\",\"2\",\"3\",\"4\",..: 9 7 9 11 11 10 9 11 9 8 ...\n $ edu        : Factor w/ 6 levels \"1\",\"2\",\"3\",\"4\",..: 4 6 4 3 5 6 6 4 5 4 ...\n $ income     : Factor w/ 8 levels \"1\",\"2\",\"3\",\"4\",..: 3 1 8 6 4 8 7 4 1 3 ...\n\n\nThat appears as if we now have a Yes/No for each binary variable from our yesNo list above. Now, let’s use fct_recode on the factors that are not binary and need a little more attention.\n\ndata3 &lt;- data2 |&gt;\n  #define levels for genHlth\n  mutate(genHlth = fct_recode(genHlth,\n    \"Excellent\" = \"1\",\n    \"Very Good\" = \"2\",\n    \"Good\" = \"3\",\n    \"Fair\" = \"4\",\n    \"Poor\" = \"5\"),\n  #define levels for age\n         age = fct_recode(age,\n    \"18 to 24\" = \"1\",\n    \"25 to 30\" = \"2\",\n    \"30 to 34\" = \"3\",\n    \"35 to 39\" = \"4\",\n    \"40 to 44\" = \"5\",\n    \"45 to 49\" = \"6\",\n    \"50 to 54\" = \"7\",\n    \"55 to 59\" = \"8\",\n    \"60 to 64\" = \"9\",\n    \"65 to 69\" = \"10\",\n    \"70 to 74\" = \"11\",\n    \"75 to 79\" = \"12\",\n    \"80 and Older\" = \"13\"),\n  #define levels for edu\n         edu = fct_recode(edu,\n    \"No School/Only Kindergarten\" = \"1\",\n    \"Grades 1-8\" = \"2\",\n    \"Grades 9-11\" = \"3\",\n    \"Grade 12/GED\" = \"4\",\n    \"College Years 1-3\" = \"5\",\n    \"College Years &gt;=4\" = \"6\"),\n  #define levels for income\n         income =fct_recode(income,\n    \"Less than $10K\" = \"1\",\n    \"$10K to less than $15K\" = \"2\",\n    \"$15K to less than $20K\" = \"3\",\n    \"$20K to less than $25K\" = \"4\",\n    \"$25K to less than $35K\" = \"5\",\n    \"$35K to less than $50K\" = \"6\",\n    \"$50K to less than $75K\" = \"7\",\n    \"Greater than $75K\" = \"8\"),\n         sex = fct_recode(sex,\n    \"Female\" = \"0\",\n    \"Male\" = \"1\")\n  )\n\nOk, that should be it for formatting, recoding and general data structure updates. Let’s check it out before moving on:\n\nstr(data3)\n\ntibble [253,680 × 22] (S3: tbl_df/tbl/data.frame)\n $ diabetesBin: Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 2 1 ...\n $ highBP     : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 2 2 2 2 2 2 1 ...\n $ highChol   : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 1 2 2 1 2 2 1 ...\n $ cholCheck  : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 2 2 2 2 2 2 2 ...\n $ bmi        : int [1:253680] 40 25 28 27 24 25 30 25 30 24 ...\n $ smoker     : Factor w/ 2 levels \"No\",\"Yes\": 2 2 1 1 1 2 2 2 2 1 ...\n $ stroke     : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n $ heartProb  : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 2 1 ...\n $ physAct    : Factor w/ 2 levels \"No\",\"Yes\": 1 2 1 2 2 2 1 2 1 1 ...\n $ fruits     : Factor w/ 2 levels \"No\",\"Yes\": 1 1 2 2 2 2 1 1 2 1 ...\n $ veg        : Factor w/ 2 levels \"No\",\"Yes\": 2 1 1 2 2 2 1 2 2 2 ...\n $ etOH       : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n $ hlthCare   : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 2 2 2 2 2 2 2 ...\n $ noDoc      : Factor w/ 2 levels \"No\",\"Yes\": 1 2 2 1 1 1 1 1 1 1 ...\n $ genHlth    : Factor w/ 5 levels \"Excellent\",\"Very Good\",..: 5 3 5 2 2 2 3 3 5 2 ...\n $ mentHlth   : int [1:253680] 18 0 30 0 3 0 0 0 30 0 ...\n $ physHlth   : int [1:253680] 15 0 30 0 0 2 14 0 30 0 ...\n $ diffWalk   : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 1 1 1 1 2 2 1 ...\n $ sex        : Factor w/ 2 levels \"Female\",\"Male\": 1 1 1 1 1 2 1 1 1 2 ...\n $ age        : Factor w/ 13 levels \"18 to 24\",\"25 to 30\",..: 9 7 9 11 11 10 9 11 9 8 ...\n $ edu        : Factor w/ 6 levels \"No School/Only Kindergarten\",..: 4 6 4 3 5 6 6 4 5 4 ...\n $ income     : Factor w/ 8 levels \"Less than $10K\",..: 3 1 8 6 4 8 7 4 1 3 ...\n\n\nNow let’s take a look at the dataset itself:\n\nhead(data3)\n\n# A tibble: 6 × 22\n  diabetesBin highBP highChol cholCheck   bmi smoker stroke heartProb physAct\n  &lt;fct&gt;       &lt;fct&gt;  &lt;fct&gt;    &lt;fct&gt;     &lt;int&gt; &lt;fct&gt;  &lt;fct&gt;  &lt;fct&gt;     &lt;fct&gt;  \n1 No          Yes    Yes      Yes          40 Yes    No     No        No     \n2 No          No     No       No           25 Yes    No     No        Yes    \n3 No          Yes    Yes      Yes          28 No     No     No        No     \n4 No          Yes    No       Yes          27 No     No     No        Yes    \n5 No          Yes    Yes      Yes          24 No     No     No        Yes    \n6 No          Yes    Yes      Yes          25 Yes    No     No        Yes    \n# ℹ 13 more variables: fruits &lt;fct&gt;, veg &lt;fct&gt;, etOH &lt;fct&gt;, hlthCare &lt;fct&gt;,\n#   noDoc &lt;fct&gt;, genHlth &lt;fct&gt;, mentHlth &lt;int&gt;, physHlth &lt;int&gt;, diffWalk &lt;fct&gt;,\n#   sex &lt;fct&gt;, age &lt;fct&gt;, edu &lt;fct&gt;, income &lt;fct&gt;\n\n\nOk, this looks as I expected. The binary factors are Yes or No, the integer variables are integers, and more complex factors have the character string descriptors attached to each level. Let’s move on to visualization."
  },
  {
    "objectID": "EDA.html#visualization-with-plots",
    "href": "EDA.html#visualization-with-plots",
    "title": "EDA",
    "section": "",
    "text": "Firstly, I had asked a question on the class discussion board on the modeling of the numeric values using factors or numerical values. From the responses in the class discussion board and in my own personal readings, it seems that these variables (mentHlth and physHlth) should be modeled as numeric inputs (if they were to be modeled).\n\n#create bar chart fo mentHlth\nmentHlthChart&lt;- ggplot(data3, aes(x=mentHlth),) +\n  geom_bar(aes(y = after_stat(prop), group = 1))\nmentHlthChart\n\n\n\n\n\n\n\n\nNext, we’ll plot the physHlth variable\n\nphysHlthChart&lt;- ggplot(data3, aes(x=physHlth),) +\n  geom_bar(aes(y = after_stat(prop), group = 1))\nphysHlthChart\n\n\n\n\n\n\n\n\nThese are both interesting plots. For both variables, there are major peaks at 0 and 30. In addition, it almost appears as if there are small, local peaks at multiples of 5 which leads me to think that these scales may not be as useful as desired and respondents may be providing “easy” number estimates. We won’t explore these variables further in this analysis since these do not fit with what I’d like to explore…variables that can be generally be directly controlled by the individual. Physical health and Mental Health may or may not be under the control of the person.\nHow is age associated with directly actionable variables? Let’s start with physAct. Do people do less physical activity as they get older?\n\n#create bar chart that shows percentage of respondents who have performed phycical activity in the last 30 days vs. those who have not at each age level.\nactAge &lt;- ggplot(data3, aes(age, fill=physAct)) +\n  geom_bar(position=\"fill\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(x = \"Age Group\",\n      y = \"Fraction of Respondents\",\n      title = \"Respondents Who Have Done Physical Activity in the Last 30 Days\")\nactAge\n\n\n\n\n\n\n\n\nIt does appear as if the overall activity level decreases as the respondents get older. Let’s explore the association of Age with other actionable variables. Do respondents generally “get healthier” as they get older?\n\n#create bar chart that shows percentage of respondents who consume vegetables at least once a day vs. those who have not at each age level.\nvegAge &lt;- ggplot(data3, aes(age, fill=veg)) +\n  geom_bar(position=\"fill\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(x = \"Age Group\",\n      y = \"Fraction of Respondents\",\n      title = \"Respondents Who Consume Vegetables Once A Day\")\nvegAge\n\n\n\n\n\n\n\n\nThe changes in vegetable consumption by age group appear small. Next, let’s look at fruit consumption by age group.\n\n#create bar chart that shows percentage of respondents who consume fruits at least once a day vs. those who have not at each age level.\nfruitAge &lt;- ggplot(data3, aes(age, fill=fruits)) +\n  geom_bar(position=\"fill\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(x = \"Age Group\",\n      y = \"Fraction of Respondents\",\n      title = \"Respondents Who Consume Fruit Once A Day\")\nfruitAge\n\n\n\n\n\n\n\n\nIt looks like fruit consumption has a slight positive trend as age increases. Now let’s look at some things that are deemed “unhealthy”. Does excessive drinking decrease with age?\n\n#create bar chart that shows percentage of respondents who are heavy drinkers vs. those who are not at each age level.\netOHAge &lt;- ggplot(data3, aes(age, fill=etOH)) +\n  geom_bar(position=\"fill\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(x = \"Age Group\",\n      y = \"Fraction of Respondents\",\n      title = \"Respondents Who Are Heavy Drinkers\")\netOHAge\n\n\n\n\n\n\n\n\nThis is difficult to visualize any trends, as any changes appear small. There may be evidence that older respondents drink less overall. Maybe we can see a diffence if we seperate by sex.\n\n#create bar chart that shows percentage of respondents who are heavy alcohol consumers vs. those who are not at each age level and by sex.\netOHAgeSex &lt;- ggplot(data3, aes(age, fill=etOH)) +\n  geom_bar(position=\"fill\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(x = \"Age Group\",\n      y = \"Fraction of Respondents\",\n      title = \"Respondents Who Are Heavy Drinkers\") +\n  facet_wrap(vars(sex))\netOHAgeSex\n\n\n\n\n\n\n\n\nThere does not appear to be much difference between the sexes.\nLet’s look at the smoking response. Does the act of smoking at least 100 cigarettes in your lifetime increase with age?\n\n#create bar chart that shows percentage of respondents who have smoke at least 100 cigarettes vs. those who have not at each age level.\nsmokeAge &lt;- ggplot(data3, aes(age, fill=smoker)) +\n  geom_bar(position=\"fill\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(x = \"Age Group\",\n      y = \"Fraction of Respondents\",\n      title = \"Respondents Who Have Smoke 100 or more Cigarettes in Their Lifetime\")\nsmokeAge\n\n\n\n\n\n\n\n\nIt looks like older age groups have smoked more, and just under half of all respondents have smoke at least 100 cigarettes in their lifetimes.\nLastly, is diabetic diagnosis relative to age?\n\n#create bar chart that shows percentage of respondents who have been diagnosed with diabetes vs. those who have not at each age level.\ndiagAge &lt;- ggplot(data3, aes(age, fill=diabetesBin)) +\n  geom_bar(position=\"fill\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(x = \"Age Group\",\n      y = \"Fraction of Respondents\",\n      title = \"Respondents Who Are/Have Been Diagnosed with Diabetes\")\ndiagAge\n\n\n\n\n\n\n\n\nIt appears that diabetes increases with age group. The previous charts have shown various trajectories for “healthy” habits relative to age. For instance, the prevalence of physical activity outside of work decreases with age. The changes in consumption of fruits and vegetables is hard to see if there is any meaningful change from these visuals. Heavy drinking decreases with age and smoking increases with age group. Hopefully our numeric summaries and modeling can create more rigorous and convincing interpretations of these predictors on risk of diabetes.\n\n\n\n\n\n\nNote\n\n\n\nThe increase in smoking does not mean that people smoke more as they age. It could mean that or it mean that society’s views on smoking have changed and smokers are moving towards aging out of the population."
  },
  {
    "objectID": "EDA.html#now-lets-explore-some-numerical-summaries.",
    "href": "EDA.html#now-lets-explore-some-numerical-summaries.",
    "title": "EDA",
    "section": "",
    "text": "How many of the respondents have diabetes?\n\ntable(data3$diabetesBin)\n\n\n    No    Yes \n218334  35346 \n\n\nHow many males and how many females have/have had diabetes?\n\ntable(data3$diabetesBin, data3$sex)\n\n     \n      Female   Male\n  No  123563  94771\n  Yes  18411  16935\n\n\nLet’s calculate a percentage of respondents who have diabetes.\n\n#this code will count 'yes' responses in diabetesBin and divide by total rows (there is no missing data) to generate a percentage of respondents that responded 'yes\" to having diabetes.\npos &lt;- data3 |&gt;\n  filter((diabetesBin %in% \"Yes\")) |&gt;\n  nrow()\ndiabetesPct &lt;- pos/nrow(data3)*100\n#diabetesPct\n\nApproximately 14% of respondents overall have or have had diabetes in some form.\nIs there a diabetes risk associated with sex? We saw above the numbers of males and females with and without diabetes. Let’s calculate proporation of diabetics for each sex.\n\n#calculate # of males with diabetes\nposMale &lt;- data3 |&gt;\n  filter((diabetesBin %in% \"Yes\" & sex %in% \"Male\")) |&gt;\n  nrow()\n#calculate total number of males\nnMale &lt;- data3 |&gt;\n  filter(sex %in% \"Male\") |&gt;\n  nrow()\n#calculate percentage of males who have diabetes\nposMalePct &lt;- posMale/nMale*100\n#posMalePct\n\nposFem &lt;- data3 |&gt;\n  filter((diabetesBin %in% \"Yes\" & sex %in% \"Female\")) |&gt;\n  nrow()\n#calculate total number of males\nnFem &lt;- data3 |&gt;\n  filter(sex %in% \"Female\") |&gt;\n  nrow()\n#calculate percentage of males who have diabetes and create tibble for display\nposFemPct &lt;- posFem/nFem*100\n#posFemPct\n#create tibble for data display\nposPcts &lt;- as_tibble(cbind(posMalePct, posFemPct))\nnames(posPcts) &lt;- c(\"% Males with Diabetes\", \"% Females with Diabetes\")\nposPcts\n\n# A tibble: 1 × 2\n  `% Males with Diabetes` `% Females with Diabetes`\n                    &lt;dbl&gt;                     &lt;dbl&gt;\n1                    15.2                      13.0\n\n\nApproximately 15% of Male respondents have/have had diabetes and approximately 13% of Female respondents have/have had diabetes. It seems that males may be slightly more at risk of developing the condition."
  },
  {
    "objectID": "EDA.html#lets-see-if-there-are-any-other-simple-relationships-that-we-can-evaluate-with-regard-to-the-actionable-variables.",
    "href": "EDA.html#lets-see-if-there-are-any-other-simple-relationships-that-we-can-evaluate-with-regard-to-the-actionable-variables.",
    "title": "EDA",
    "section": "",
    "text": "Below, we’ll check out if physical activity helps derisk diabetes.\n\n#calculate number of people without diabetes who have also been active in the past 30 days.\nnegAct &lt;- data3 |&gt;\n  filter((diabetesBin %in% \"No\" & physAct %in% \"Yes\")) |&gt;\n  nrow()\n#calculate total number of respondents who were active in the last 30 days.\nnAct &lt;- data3 |&gt;\n  filter(physAct %in% \"Yes\") |&gt;\n  nrow()\n#calculate percentage of active respondents who do not have diabetes\nnegActPct &lt;- negAct/nAct*100\n#negActPct\n\n88% of respondents who have been active in the past 30 days do not have and have not had diabetes. This doesn’t really mean much by itself. We’ll see further down how this compares to non-active responders.\nWe can also generate similar stats for other actionable factor variables using the prop.table() function. Let’s check out some diet relationships with diabetes.\n\n#generate contingency table and use addmargins() to get marginal percentages\nvegTable &lt;- table(data3$diabetesBin, data3$veg)\nvegTablePct&lt;- addmargins(prop.table(vegTable))\nvegTablePct\n\n     \n             No       Yes       Sum\n  No  0.1546397 0.7060273 0.8606670\n  Yes 0.0339404 0.1053926 0.1393330\n  Sum 0.1885801 0.8114199 1.0000000\n\n\nThis is a little difficult to interpret because both variable levels are “YES” and “NO”. However, the behavior of the table() function puts the first argument on the y-axis and the second argument on the x-axis. It is also difficult to make sense any these percentages, since they are percentages of the total responses. We can generate ratios for combinations of values from each variable.\n\n#proportion of healthy choice associated with diabetes, and proportion of unhealthy choice associated with diabetes.\nposVegProp &lt;- vegTablePct[2,2]/vegTablePct[3,2]\n#posVegProp\n#proportion of respondents who choose unhealthy activities who were diagnosed with diabetes\nposNoVegProp &lt;- vegTablePct[2,1]/vegTablePct[3,1]\n#posNoVegProp\n\n#create tibble of ratios and rename columns for display.\nvegPropTab &lt;- as_tibble(cbind(posVegProp, posNoVegProp))\nnames(vegPropTab) &lt;- c(\"Vegetable Eaters With Diabetes\", \"Non-Vegetable Eaters With Diabetes\")\n#vegPropTab\n\nThe proportion of people who ate vegetables and developed diabetes is lower than the proportion of people who did not eat vegetables and developed diabetes. Let’s evaluate this same ratio for fruit consumption.\n\n#generate contingency table and use addmargins() to get marginal percentages\nfruitTable &lt;- table(data3$diabetesBin, data3$fruits)\nfruitTablePct&lt;- addmargins(prop.table(fruitTable))\nfruitTablePct\n\n     \n              No        Yes        Sum\n  No  0.30798250 0.55268448 0.86066698\n  Yes 0.05776175 0.08157127 0.13933302\n  Sum 0.36574424 0.63425576 1.00000000\n\n\n\n#proportion of healthy choice associated with diabetes, and proportion of unhealthy choice associated with diabetes.\nposFruitProp &lt;- fruitTablePct[2,2]/fruitTablePct[3,2]\n#posFruitProp\n#proportion of respondents who choose unhealthy activities who were diagnosed with diabetes\nposNoFruitProp &lt;- fruitTablePct[2,1]/fruitTablePct[3,1]\n#posNoFruitProp\n\n#create tibble of ratios and rename columns for display.\nfruitPropTab &lt;- as_tibble(cbind(posFruitProp, posNoFruitProp))\nnames(fruitPropTab) &lt;- c(\"Fruit Eaters With Diabetes\", \"Non-Fruit Eaters With Diabetes\")\nfruitPropTab\n\n# A tibble: 1 × 2\n  `Fruit Eaters With Diabetes` `Non-Fruit Eaters With Diabetes`\n                         &lt;dbl&gt;                            &lt;dbl&gt;\n1                        0.129                            0.158\n\n\nThe proportion of people who ate fruit and developed diabetes is lower than the proportion of people who did not eat vegetables and developed diabetes.\nLet’s move on to the activities that are commonly labeled as “risky,” smoking and drinking and calculate similar proportions.\n\n#generate contingency table and use addmargins() to get marginal percentages\nsmokeTable &lt;- table(data3$diabetesBin, data3$smoker)\nsmokeTablePct&lt;- addmargins(prop.table(smokeTable))\nsmokeTablePct\n\n     \n              No        Yes        Sum\n  No  0.48970356 0.37096342 0.86066698\n  Yes 0.06712788 0.07220514 0.13933302\n  Sum 0.55683144 0.44316856 1.00000000\n\n\n\n#proportion of healthy lifestyle choice for diabetics and proportion of unhealthy choice for diabetics, switching logic to have same order of \"good:bad\".\nposNoSmokeProp &lt;- smokeTablePct[2,1]/smokeTablePct[3,1]\n#posNoSmokeProp\n#proportion of respondents who choose unhealthy activities who were diagnosed with diabetes\nposSmokeProp &lt;- smokeTablePct[2,2]/smokeTablePct[3,2]\n#posSmokeProp\n\n#create tibble of ratios and rename columns for display.\nsmokePropTab &lt;- as_tibble(cbind(posNoSmokeProp, posSmokeProp))\nnames(smokePropTab) &lt;- c(\"Non-smokers With Diabetes\", \"Smokers With Diabetes\")\nsmokePropTab\n\n# A tibble: 1 × 2\n  `Non-smokers With Diabetes` `Smokers With Diabetes`\n                        &lt;dbl&gt;                   &lt;dbl&gt;\n1                       0.121                   0.163\n\n\nThe proportion of people who did not smoke at least 100 cigarettes in their lifetime and developed diabetes is lower than the proportion of people who did smoke that many cigarettes and developed diabetes.\nNow we’ll explore the choice of heavy alcohol consumption and its relationship to diabetes.\n\n#generate contingency table and use addmargins() to get marginal percentages\netOHTable &lt;- table(data3$diabetesBin, data3$etOH)\netOHTablePct&lt;- addmargins(prop.table(etOHTable))\netOHTablePct\n\n     \n               No         Yes         Sum\n  No  0.807749921 0.052917061 0.860666982\n  Yes 0.136053295 0.003279722 0.139333018\n  Sum 0.943803217 0.056196783 1.000000000\n\n\n\n#proportion of healthy lifestyle choice for diabetics and proportion of unhealthy choice for diabetics, switching logic to have same order of \"good:bad\".\nposNoetOHProp &lt;- etOHTablePct[2,1]/etOHTablePct[3,1]\n#posNoSmokeProp\n#proportion of respondents who choose unhealthy activities who were diagnosed with diabetes\nposetOHProp &lt;- etOHTablePct[2,2]/etOHTablePct[3,2]\n#posetOHProp\n\n#create tibble of ratios and rename columns for display.\netOHPropTab &lt;- as_tibble(cbind(posNoetOHProp, posetOHProp))\nnames(etOHPropTab) &lt;- c(\"Non-Bingers With Diabetes\", \"Bingers With Diabetes\")\netOHPropTab\n\n# A tibble: 1 × 2\n  `Non-Bingers With Diabetes` `Bingers With Diabetes`\n                        &lt;dbl&gt;                   &lt;dbl&gt;\n1                       0.144                  0.0584\n\n\nOverall, the proportion of people who did not drink heavily (“binge”) is higher than the proportion of those who did binge and develop diabetes. I did not expect this.\nWe already calculated similar proportions above for physAct, but let’s do it here again in the same format as the other variables so that we can combine all the tables into a single table for ease of visualization.\n\n#generate contingency table and use addmargins() to get marginal percentages\nactTable &lt;- table(data3$diabetesBin, data3$physAct)\nactTablePct&lt;- addmargins(prop.table(actTable))\nactTablePct\n\n     \n              No        Yes        Sum\n  No  0.19197808 0.66868890 0.86066698\n  Yes 0.05147824 0.08785478 0.13933302\n  Sum 0.24345632 0.75654368 1.00000000\n\n\n\n#proportion of healthy choice associated with diabetes, and proportion of unhealthy choice associated with diabetes..\nposActProp &lt;- actTablePct[2,2]/actTablePct[3,2]\n#posActProp\n#proportion of respondents who choose unhealthy activities who were diagnosed with diabetes\nposNoActProp &lt;- actTablePct[2,1]/actTablePct[3,1]\n#posNoActProp\n\n#create tibble of ratios and rename columns for display.\nactPropTab &lt;- as_tibble(cbind(posActProp, posNoActProp))\nnames(actPropTab) &lt;- c(\"Active People With Diabetes\", \"Non-Active People With Diabetes\")\nactPropTab\n\n# A tibble: 1 × 2\n  `Active People With Diabetes` `Non-Active People With Diabetes`\n                          &lt;dbl&gt;                             &lt;dbl&gt;\n1                         0.116                             0.211\n\n\nNon-diabetics generally have a more active lifestyle than diabetics. The proportion of non-active people who develop diabetes is almost double the proportion of active people who develop the disease.\nLet’s combine all of the variable proportions into a single tibble for ease of viewing the proportions side-by-side.\n\n#rename all variables of the proportion tables to \"healthy\" or \"unhealthy\" so they can be bound into a single table. Use name index to rename all tables with the same syntax.\nveg &lt;- vegPropTab |&gt;\n  rename(\"healthy\" = 1,\n         \"unhealthy\" = 2)\nveg$source &lt;- \"veg\"\n\nfruit &lt;- fruitPropTab |&gt;\n  rename(\"healthy\" = 1,\n         \"unhealthy\" = 2)\nfruit$source &lt;- \"fruit\"\n\nsmoke &lt;- smokePropTab |&gt;\n  rename(\"healthy\" = 1,\n         \"unhealthy\" = 2)\nsmoke$source &lt;- \"smoker\"\n\netOH &lt;- etOHPropTab |&gt;\n  rename(\"healthy\" = 1,\n         \"unhealthy\" = 2)\netOH$source &lt;- \"drinker\"\n\nact &lt;- actPropTab |&gt;\n  rename(\"healthy\" = 1,\n         \"unhealthy\" = 2)\nact$source &lt;- \"active\"\n\n#combine all tables into singel table\npropTable &lt;- rbind(veg, fruit, smoke, etOH, act)\npropTable\n\n# A tibble: 5 × 3\n  healthy unhealthy source \n    &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;  \n1   0.130    0.180  veg    \n2   0.129    0.158  fruit  \n3   0.121    0.163  smoker \n4   0.144    0.0584 drinker\n5   0.116    0.211  active \n\n\n\n\nThis last tibble compares the proportions of respondents who have chosen healthy options who have developed diabetes against the proportions of respondents who have non chosen healthy options who have developed diabetes. On the surface, it seems that you could potentially pick the healthy choice in 4/5 categories and have a lower risk of developing diabetes. However, the alcohol variable is perplexing. Additionally, each of these proportions is calculated “in a vacuum” in the sense that they do not take other variables into consideration. The regression tree and random forest models should take care of that and help us to understand if any of the variables are more important than others when understanding risk of developing diabetes and how lifestyle choices can impact that outcome."
  }
]